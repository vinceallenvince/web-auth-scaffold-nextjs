name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npx prisma generate

    - name: Run ESLint
      run: npm run lint

    - name: Run tests
      run: node scripts/npm-to-pnpm.js test
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/auth_testing"
        NEXTAUTH_SECRET: "test-secret-key-for-ci"
        NEXTAUTH_URL: "http://localhost:3000"
        EMAIL_FROM: "test@example.com"
        RESEND_API_KEY: "test_key"
        FORCE_EMAIL_SENDING: "false"

    # If you need an actual Postgres database for tests (rather than mocks)
    # services:
    #   postgres:
    #     image: postgres:14
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: auth_testing
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5